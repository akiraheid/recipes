//- Back button
.row.my-3: .col-auto.mr-auto
	//- Click behavior set depending on context
	button#recipe-form-back.btn.btn-secondary <


form
	.form-row.mb-3: .col
		input#recipe-form-name.form-control(type='text' autocomplete='off'
			placeholder='Recipe name')

		#recipe-form-name-help.invalid-feedback.d-none Recipe name taken

	.form-group.row.mb-3
		label.col-form-label.col-auto.pr-2(for='recipe-form-servings') Servings
		.col.pl-0: input#recipe-form-servings.form-control(type='number'
			autocomplete='off' min='0' step='1' placeholder='1')

	.form-row: .col
		div Ingredients

		//- Populated via JS
		#recipe-form-ingredients

	.form-row: .col-auto
		button.btn.btn-secondary(onclick='app.addRecipeFormIngredient()') + Ingredient

	.form-row: .col
		.input-group: label.w-100 Directions
			textarea#recipe-form-directions.form-control.w-100(
				autocomplete='off')

			#recipe-form-directions-help.invalid-feedback.d-none Cannot be empty


//- Save and reset button
.row.justify-content-center.align-items-center
	.col-auto: button#recipe-form-save.btn-lg.btn-secondary Save
	.col-auto: button#recipe-form-reset.btn.btn-secondary Reset


#template-ingredient-form.ingredient.mb-2.d-none
	.form-row
		.col
			input.name.form-control(type='text'
				autocomplete='off' placeholder='Ingredient name')

			.name-help.invalid-feedback.d-none Cannot be empty

		.col-auto: button.btn.btn-danger(type='button') -

	.form-row
		.col
			input.amount.form-control(type='number'
				autocomplete='off' min='0' step='0.01' placeholder='Amount')

			.amount-help.invalid-feedback.d-none Cannot be empty

		.col: select.unit.form-control
			-
				let _units3 = ['cup', 'floz', 'g', 'gal', 'kg', 'lb', 'liter', 'oz', 'pint', 'quart', 'tbsp', 'tsp']

			option(value='') No unit
			each unit in _units3
				option(value=unit) #{unit}

	.form-row: .col: input.prep.form-control(type='text' autocomplete='off'
		placeholder='Preparation')

	.form-row: .col: input.note.form-control(type='text' autocomplete='off'
		placeholder='Note')
